on:
  push:
    branches: [ main ]
    paths:
      - 'tools/deploy/module4/**'   # <-- was *text*, likely too narrow
  workflow_dispatch:

env:
  TEST_AZURE_CONTAINER_REGISTRY: ${{ vars.TEST_AZURE_CONTAINER_REGISTRY }}
  TEST_RESOURCE_GROUP: ${{ vars.TEST_RESOURCE_GROUP }}
  TEST_CLUSTER_NAME: ${{ vars.TEST_CLUSTER_NAME }}
  TEST_DEPLOYMENT_MANIFEST_PATH: ${{ vars.TEST_DEPLOYMENT_MANIFEST_PATH }}

permissions:
  id-token: write
  contents: read

jobs:
  PushImagetoACR:
    name: Push Sample Image to ACR and AKS
    environment: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Echo variables
        run: |
          echo "TEST_AZURE_CONTAINER_REGISTRY=${TEST_AZURE_CONTAINER_REGISTRY}"
          echo "TEST_RESOURCE_GROUP=${TEST_RESOURCE_GROUP}"
          echo "TEST_CLUSTER_NAME=${TEST_CLUSTER_NAME}"
          echo "TEST_DEPLOYMENT_MANIFEST_PATH=${TEST_DEPLOYMENT_MANIFEST_PATH}"

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.TEST_AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.TEST_AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.TEST_AZURE_SUBSCRIPTION_ID }}

      - name: Guard required env vars
        run: |
          set -euo pipefail
          : "${TEST_AZURE_CONTAINER_REGISTRY:?Set TEST_AZURE_CONTAINER_REGISTRY in repo or environment variables}"
          : "${TEST_RESOURCE_GROUP:?Set TEST_RESOURCE_GROUP in repo or environment variables}"
          : "${TEST_CLUSTER_NAME:?Set TEST_CLUSTER_NAME in repo or environment variables}"
          : "${TEST_DEPLOYMENT_MANIFEST_PATH:?Set TEST_DEPLOYMENT_MANIFEST_PATH in repo or environment variables}"

      - name: Resolve ACR login server
        id: acr
        run: |
          LOGIN_SERVER=$(az acr show -n "$TEST_AZURE_CONTAINER_REGISTRY" -g "$TEST_RESOURCE_GROUP" --query loginServer -o tsv)
          echo "login_server=$LOGIN_SERVER" >> "$GITHUB_OUTPUT"

      - name: Import nginx into ACR
        run: |
          az acr import \
            --name "$TEST_AZURE_CONTAINER_REGISTRY" \
            --resource-group "$TEST_RESOURCE_GROUP" \
            --source docker.io/library/nginx:latest \
            --image nginx:latest

      - name: Set up kubelogin
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.0.25'

      - name: Get AKS context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.TEST_RESOURCE_GROUP }}
          cluster-name: ${{ env.TEST_CLUSTER_NAME }}
          admin: 'true'             # set to 'false' if using AAD/RBAC instead
          use-kubelogin: 'true'

      - name: Deploy application
        uses: Azure/k8s-deploy@v4
        with:
          action: deploy
          manifests: ${{ env.TEST_DEPLOYMENT_MANIFEST_PATH }}
          images: |
            ${{ steps.acr.outputs.login_server }}/nginx:latest
